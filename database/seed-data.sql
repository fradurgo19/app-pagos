/*
  Datos de Prueba para APPpagos
  PostgreSQL 17 Local
  
  ADVERTENCIA: Solo usar en desarrollo
  NO ejecutar en producci√≥n
*/

-- ============================================
-- USUARIOS DE PRUEBA
-- ============================================

-- Usuario Admin (Coordinador de √Årea)
-- Email: admin@apppagos.com
-- Password: admin123
INSERT INTO profiles (email, password_hash, full_name, role, location, department)
VALUES (
  'admin@apppagos.com',
  crypt('admin123', gen_salt('bf')),
  'Juan Administrador',
  'area_coordinator',
  'Oficina Bogot√°',
  'Administraci√≥n'
) ON CONFLICT (email) DO NOTHING;

-- Usuario B√°sico 1
-- Email: usuario1@apppagos.com
-- Password: user123
INSERT INTO profiles (email, password_hash, full_name, role, location, department)
VALUES (
  'usuario1@apppagos.com',
  crypt('user123', gen_salt('bf')),
  'Mar√≠a Garc√≠a',
  'basic_user',
  'Oficina Bogot√°',
  'Contabilidad'
) ON CONFLICT (email) DO NOTHING;

-- Usuario B√°sico 2
-- Email: usuario2@apppagos.com
-- Password: user123
INSERT INTO profiles (email, password_hash, full_name, role, location, department)
VALUES (
  'usuario2@apppagos.com',
  crypt('user123', gen_salt('bf')),
  'Carlos Rodr√≠guez',
  'basic_user',
  'Oficina Medell√≠n',
  'TI'
) ON CONFLICT (email) DO NOTHING;

-- ============================================
-- UMBRALES DE PRESUPUESTO
-- ============================================

INSERT INTO budget_thresholds (service_type, location, monthly_limit, warning_threshold)
VALUES
  ('electricity', 'Oficina Bogot√°', 5000000, 80),
  ('water', 'Oficina Bogot√°', 1000000, 80),
  ('gas', 'Oficina Bogot√°', 800000, 80),
  ('internet', 'Oficina Bogot√°', 500000, 80),
  ('phone', 'Oficina Bogot√°', 300000, 80),
  ('electricity', 'Oficina Medell√≠n', 4000000, 80),
  ('water', 'Oficina Medell√≠n', 800000, 80),
  ('internet', 'Oficina Medell√≠n', 400000, 80)
ON CONFLICT (service_type, location) DO NOTHING;

-- ============================================
-- FACTURAS DE EJEMPLO
-- ============================================

-- Obtener IDs de usuarios
DO $$
DECLARE
  v_user1_id UUID;
  v_user2_id UUID;
  v_admin_id UUID;
BEGIN
  SELECT id INTO v_user1_id FROM profiles WHERE email = 'usuario1@apppagos.com';
  SELECT id INTO v_user2_id FROM profiles WHERE email = 'usuario2@apppagos.com';
  SELECT id INTO v_admin_id FROM profiles WHERE email = 'admin@apppagos.com';

  -- Facturas de Usuario 1 (Mar√≠a)
  INSERT INTO utility_bills (
    user_id, service_type, provider, description, value, period,
    invoice_number, total_amount, consumption, unit_of_measure,
    cost_center, location, due_date, status
  ) VALUES
  -- Mes actual
  (v_user1_id, 'electricity', 'Codensa', 'Consumo mensual de energ√≠a', 450000, TO_CHAR(CURRENT_DATE, 'YYYY-MM'),
   'ELEC-2024-001', 450000, 580, 'kWh', 'Contabilidad', 'Oficina Bogot√°',
   CURRENT_DATE + INTERVAL '15 days', 'pending'),
   
  (v_user1_id, 'water', 'EAAB', 'Servicio de acueducto', 85000, TO_CHAR(CURRENT_DATE, 'YYYY-MM'),
   'AGUA-2024-001', 85000, 45, 'm¬≥', 'Contabilidad', 'Oficina Bogot√°',
   CURRENT_DATE + INTERVAL '10 days', 'pending'),
   
  (v_user1_id, 'internet', 'Claro', 'Fibra √≥ptica 500 Mbps', 120000, TO_CHAR(CURRENT_DATE, 'YYYY-MM'),
   'INT-2024-001', 120000, 500, 'GB', 'Contabilidad', 'Oficina Bogot√°',
   CURRENT_DATE + INTERVAL '20 days', 'approved'),

  -- Mes anterior
  (v_user1_id, 'electricity', 'Codensa', 'Consumo mensual de energ√≠a', 420000, TO_CHAR(CURRENT_DATE - INTERVAL '1 month', 'YYYY-MM'),
   'ELEC-2023-012', 420000, 550, 'kWh', 'Contabilidad', 'Oficina Bogot√°',
   CURRENT_DATE - INTERVAL '1 month' + INTERVAL '15 days', 'paid'),
   
  (v_user1_id, 'water', 'EAAB', 'Servicio de acueducto', 78000, TO_CHAR(CURRENT_DATE - INTERVAL '1 month', 'YYYY-MM'),
   'AGUA-2023-012', 78000, 42, 'm¬≥', 'Contabilidad', 'Oficina Bogot√°',
   CURRENT_DATE - INTERVAL '1 month' + INTERVAL '10 days', 'paid');

  -- Facturas de Usuario 2 (Carlos)
  INSERT INTO utility_bills (
    user_id, service_type, provider, description, value, period,
    invoice_number, total_amount, consumption, unit_of_measure,
    cost_center, location, due_date, status
  ) VALUES
  (v_user2_id, 'electricity', 'EPM', 'Consumo mensual de energ√≠a', 380000, TO_CHAR(CURRENT_DATE, 'YYYY-MM'),
   'ELEC-MDE-001', 380000, 490, 'kWh', 'TI', 'Oficina Medell√≠n',
   CURRENT_DATE + INTERVAL '12 days', 'pending'),
   
  (v_user2_id, 'internet', 'Une', 'Internet empresarial 1 Gbps', 250000, TO_CHAR(CURRENT_DATE, 'YYYY-MM'),
   'INT-MDE-001', 250000, 1000, 'GB', 'TI', 'Oficina Medell√≠n',
   CURRENT_DATE + INTERVAL '25 days', 'pending'),
   
  (v_user2_id, 'phone', 'Movistar', 'Plan corporativo', 150000, TO_CHAR(CURRENT_DATE, 'YYYY-MM'),
   'TEL-MDE-001', 150000, 500, 'minutes', 'TI', 'Oficina Medell√≠n',
   CURRENT_DATE + INTERVAL '18 days', 'draft');

  -- Facturas del Admin
  INSERT INTO utility_bills (
    user_id, service_type, provider, description, value, period,
    invoice_number, total_amount, consumption, unit_of_measure,
    cost_center, location, due_date, status, approved_by, approved_at
  ) VALUES
  (v_admin_id, 'gas', 'Gas Natural', 'Gas natural domiciliario', 65000, TO_CHAR(CURRENT_DATE, 'YYYY-MM'),
   'GAS-BOG-001', 65000, 18, 'm¬≥', 'Administraci√≥n', 'Oficina Bogot√°',
   CURRENT_DATE + INTERVAL '8 days', 'approved', v_admin_id, NOW());

END $$;

-- ============================================
-- NOTIFICACIONES DE EJEMPLO
-- ============================================

DO $$
DECLARE
  v_user1_id UUID;
  v_bill_id UUID;
BEGIN
  SELECT id INTO v_user1_id FROM profiles WHERE email = 'usuario1@apppagos.com';
  SELECT id INTO v_bill_id FROM utility_bills WHERE invoice_number = 'ELEC-2024-001' LIMIT 1;

  INSERT INTO notifications (user_id, bill_id, type, message, read)
  VALUES
  (v_user1_id, v_bill_id, 'due_reminder', 'Tu factura de electricidad vence en 15 d√≠as', false),
  (v_user1_id, NULL, 'budget_alert', 'El consumo de energ√≠a ha alcanzado el 85% del presupuesto mensual', false);
END $$;

-- ============================================
-- RESUMEN
-- ============================================

SELECT 
  '‚úÖ Datos de prueba insertados correctamente' as status;

SELECT 
  'Usuarios creados:' as info,
  COUNT(*) as cantidad
FROM profiles;

SELECT 
  'Facturas creadas:' as info,
  COUNT(*) as cantidad
FROM utility_bills;

SELECT 
  'Umbrales de presupuesto:' as info,
  COUNT(*) as cantidad
FROM budget_thresholds;

-- Mostrar usuarios y contrase√±as
SELECT 
  'üìã USUARIOS DE PRUEBA' as info;

SELECT 
  email,
  role,
  'Contrase√±a: admin123 o user123' as password,
  location
FROM profiles
ORDER BY role DESC, email;

SELECT 
  'üí° TIP: Usa estos usuarios para iniciar sesi√≥n en la aplicaci√≥n' as tip;

